import unittest

from grammar_fst.Pynini.attr_cabel_fst import CableParser


class TestAttributeGrammarFST(unittest.TestCase):

    @classmethod
    def setUpClass(cls) -> None:
        cls.test_cable_parser = CableParser()

    def test_parse_block_0(self):
        test_data = {

            'Кабели силовые': [
                ['Кабель ВВГ - Пнг ( А ) 3 х 2 . 5 мм 50 м',
                 'O O O O O O O B-Количество жил O B-Сечение провода_кв.мм I-Сечение провода_кв.мм I-Сечение провода_'
                 'кв.мм O '
                 'B-Длина_м I-Длина_м'],
                ['Кабель КГ 1 х 16 мм на отрез',
                 'O O B-Количество жил O B-Сечение провода_кв.мм I-Сечение провода_кв.мм O O'],
                ['Кабель ВВГп - НГ 3 х 2 . 5 мм 50 м ( ГОСТ )',
                 'O O O O B-Количество жил O B-Сечение провода_кв.мм I-Сечение провода_кв.мм I-Сечение провода_кв.мм O '
                 'B-Длина_м '
                 'I-Длина_м O O O'],
                ['Кабель NYM 3 х 4 мм на отрез ( ГОСТ )',
                 'O O B-Количество жил O B-Сечение провода_кв.мм I-Сечение провода_кв.мм O O O O O'],
                ['Кабель NYM 2 х 6 мм на отрез ( ГОСТ )',
                 'O O B-Количество жил O B-Сечение провода_кв.мм I-Сечение провода_кв.мм O O O O O'],
                ['Провод ПВС 2 х 1 мм на отрез ( ГОСТ )',
                 'O O B-Количество жил O B-Сечение провода_кв.мм I-Сечение провода_кв.мм O O O O O']],

            'Кабели информационные': [
                ['Кабель сетевой UTP cat 5e 4 х 2 х 0 . 51 мм 10 м',
                 'O O O O O B-Количество жил O B-Количество соединительных проводов O B-Диаметр_мм I-Диаметр_мм '
                 'I-Диаметр_мм O B-Длина_м I-Длина_м']
            ]
        }

        true_result = [
            ('Кабели информационные', [
                ('Кабель сетевой UTP cat 5e 4 х 2 х 0 . 51 мм 10 м', [
                    ('диаметр', 'Кабель сетевой UTP cat 5e 4 х 2 х Диаметр Диаметр Диаметр мм 10 м'),
                    ('длина_кабеля', 'Кабель сетевой UTP cat 5e 4 х 2 х 0 . 51 мм Длина_кабеля м'),
                    ('жилы', 'Кабель сетевой UTP cat 5e #жил х 2 х 0 . 51 мм 10 м'),
                    ('соединительные_провода', 'Кабель сетевой UTP cat 5e 4 х #соединительных_проводов х 0 . 51 мм 10 м')])]),

            ('Кабели силовые', [

                ('Кабель NYM 2 х 6 мм на отрез ( ГОСТ )', [
                    ('длина_кабеля', 'Кабель NYM 2 х 6 мм на отрез ( ГОСТ )'),
                    ('жилы', 'Кабель NYM #жил х 6 мм на отрез ( ГОСТ )'),
                    ('сечение_кабеля_0', 'Кабель NYM 2 х 6 мм на отрез ( ГОСТ )'),
                    ('сечение_кабеля_1', 'Кабель NYM 2 х Сечение_кабеля мм на отрез ( ГОСТ )')]),

                ('Кабель NYM 3 х 4 мм на отрез ( ГОСТ )', [
                    ('длина_кабеля', 'Кабель NYM 3 х 4 мм на отрез ( ГОСТ )'),
                    ('жилы', 'Кабель NYM #жил х 4 мм на отрез ( ГОСТ )'),
                    ('сечение_кабеля_0', 'Кабель NYM 3 х 4 мм на отрез ( ГОСТ )'),
                    ('сечение_кабеля_1', 'Кабель NYM 3 х Сечение_кабеля мм на отрез ( ГОСТ )')]),

                ('Кабель ВВГ - Пнг ( А ) 3 х 2 . 5 мм 50 м', [
                    ('длина_кабеля', 'Кабель ВВГ - Пнг ( А ) 3 х 2 . 5 мм Длина_кабеля м'),
                    ('жилы', 'Кабель ВВГ - Пнг ( А ) #жил х 2 . 5 мм 50 м'),
                    ('сечение_кабеля_0', 'Кабель ВВГ - Пнг ( А ) 3 х Сечение_кабеля Сечение_кабеля Сечение_кабеля мм 50 м'),
                    ('сечение_кабеля_1', 'Кабель ВВГ - Пнг ( А ) 3 х 2 . 5 мм 50 м')]),

                ('Кабель ВВГп - НГ 3 х 2 . 5 мм 50 м ( ГОСТ )', [
                    ('длина_кабеля', 'Кабель ВВГп - НГ 3 х 2 . 5 мм Длина_кабеля м ( ГОСТ )'),
                    ('жилы', 'Кабель ВВГп - НГ #жил х 2 . 5 мм 50 м ( ГОСТ )'),
                    ('сечение_кабеля_0', 'Кабель ВВГп - НГ 3 х Сечение_кабеля Сечение_кабеля Сечение_кабеля мм 50 м ( ГОСТ )'),
                    ('сечение_кабеля_1', 'Кабель ВВГп - НГ 3 х 2 . 5 мм 50 м ( ГОСТ )')]),

                ('Кабель КГ 1 х 16 мм на отрез', [
                    ('длина_кабеля', 'Кабель КГ 1 х 16 мм на отрез'),
                    ('жилы', 'Кабель КГ #жил х 16 мм на отрез'),
                    ('сечение_кабеля_0', 'Кабель КГ 1 х 16 мм на отрез'),
                    ('сечение_кабеля_1', 'Кабель КГ 1 х Сечение_кабеля мм на отрез')]),

                ('Провод ПВС 2 х 1 мм на отрез ( ГОСТ )', [
                    ('длина_кабеля', 'Провод ПВС 2 х 1 мм на отрез ( ГОСТ )'),
                    ('жилы', 'Провод ПВС #жил х 1 мм на отрез ( ГОСТ )'),
                    ('сечение_кабеля_0', 'Провод ПВС 2 х 1 мм на отрез ( ГОСТ )'),
                    ('сечение_кабеля_1', 'Провод ПВС 2 х Сечение_кабеля мм на отрез ( ГОСТ )')
                ])])]

        self.test_cable_parser.rules = self.test_cable_parser.get_fst(fst_names=[r_name for r_name in test_data])
        fact_result = self.test_cable_parser.parse_block(test_data)
        self.assertEqual(true_result, fact_result)


if __name__ == '__main__':
    unittest.main()
